/***************************************************************
 *
 * Interactive Learning Platform: Digital Audio
 * Copyright (c) 2010 Dr. Andrew Kwok-Fai LUI
 * The Open University of Hong Kong
 *
 * Enhance the learning effectiveness of students through greater interactions
 */
/*  This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
package faifai.audio;

import java.awt.Color;
import java.util.Hashtable;
import java.util.Iterator;
import javax.swing.JButton;

import faifai.audio.effect.AbstractEffect;
import faifai.audio.effect.AmplifyEffect;
import faifai.audio.effect.BandPassEffect;
import faifai.audio.effect.BandRejectEffect;
import faifai.audio.effect.BoostEffect;
import faifai.audio.effect.FadeInEffect;
import faifai.audio.effect.FadeOutEffect;
import faifai.audio.effect.HighPassEffect;
import faifai.audio.effect.LowPassEffect;
import faifai.audio.effect.ReverbEffect;
import faifai.audio.effect.ReverseEffect;

public class EffectControlPanel extends javax.swing.JPanel implements Runnable {

  private Thread thisThread;
  private boolean toStop = false;
  private EffectProcess theProcess = null;
  private static Color enabledColor = Color.YELLOW;
  private static Color disabledColor = Color.DARK_GRAY;
  private Hashtable<JButton, AbstractEffect> effectTable = new Hashtable<JButton, AbstractEffect>();

  /** Creates new form WaveGeneratorPanel */
  public EffectControlPanel() {
    initComponents();
    this.theProcess = new EffectProcess();
    initEffectTable();
    updateButtonDisplayAll();
    thisThread = new Thread(this);
    thisThread.start();
  }

  private void updateButtonDisplay(JButton theButton, AbstractEffect theEffect) {
    if (theEffect == null)
      return;
    if (theEffect.isEnabled()) {
      theButton.setBackground(enabledColor);
      theButton.setForeground(disabledColor);
    } else {
      theButton.setBackground(disabledColor);
      theButton.setForeground(enabledColor);
    }
  }

  private void initEffectTable() {
    effectTable.put(jButton1, theProcess.getEffect(AmplifyEffect.class));
    effectTable.put(jButton2, theProcess.getEffect(BoostEffect.class));
    effectTable.put(jButton3, theProcess.getEffect(FadeInEffect.class));
    effectTable.put(jButton4, theProcess.getEffect(FadeOutEffect.class));
    effectTable.put(jButton5, theProcess.getEffect(HighPassEffect.class));
    effectTable.put(jButton6, theProcess.getEffect(LowPassEffect.class));
    effectTable.put(jButton7, theProcess.getEffect(BandPassEffect.class));
    effectTable.put(jButton8, theProcess.getEffect(BandRejectEffect.class));
    effectTable.put(jButton9, theProcess.getEffect(ReverseEffect.class));
    effectTable.put(jButton10, theProcess.getEffect(ReverbEffect.class));
  }

  private void updateButtonDisplayAll() {
    Iterator<JButton> it = effectTable.keySet().iterator();
    while (it.hasNext()) {
      JButton theButton = it.next();
      updateButtonDisplay(theButton, effectTable.get(theButton));
    }
  }

  public void setControlEnabled(boolean enabled) {
    jSlider1.setEnabled(enabled);
    jTextField1.setEnabled(enabled);
    jSlider2.setEnabled(enabled);
    jSlider3.setEnabled(enabled);
  }

  public EffectProcess startEffectProcess() {

    return theProcess;
  }

  public void close() {
    toStop = true;
  }

  public void run() {
    long count = 0;
    while (true) {
      if (toStop) {
        break;
      }
      if (theProcess != null) {
        AudioDataBuffer inputDataBuffer = theProcess.getInputDataBuffer();
        AudioDataBuffer outputDataBuffer = theProcess.getOutputDataBuffer();
      }
      try {
        thisThread.sleep(500);
      } catch (InterruptedException ex) {
        ex.printStackTrace();
        break;
      } catch (Exception ex) {
        ex.printStackTrace();
      }
    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    jPanel1 = new javax.swing.JPanel();
    jSlider1 = new javax.swing.JSlider();
    jTextField1 = new javax.swing.JTextField();
    jButton1 = new javax.swing.JButton();
    jPanel2 = new javax.swing.JPanel();
    jButton2 = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jPanel3 = new javax.swing.JPanel();
    jSlider2 = new javax.swing.JSlider();
    jTextField2 = new javax.swing.JTextField();
    jButton3 = new javax.swing.JButton();
    jPanel4 = new javax.swing.JPanel();
    jSlider3 = new javax.swing.JSlider();
    jTextField3 = new javax.swing.JTextField();
    jButton4 = new javax.swing.JButton();
    jPanel5 = new javax.swing.JPanel();
    jButton5 = new javax.swing.JButton();
    jButton6 = new javax.swing.JButton();
    jButton7 = new javax.swing.JButton();
    jButton8 = new javax.swing.JButton();
    jPanel6 = new javax.swing.JPanel();
    jButton9 = new javax.swing.JButton();
    jLabel2 = new javax.swing.JLabel();
    jPanel7 = new javax.swing.JPanel();
    jSlider4 = new javax.swing.JSlider();
    jTextField4 = new javax.swing.JTextField();
    jButton10 = new javax.swing.JButton();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jSlider5 = new javax.swing.JSlider();
    jTextField5 = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    jSlider6 = new javax.swing.JSlider();
    jTextField6 = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    jSlider7 = new javax.swing.JSlider();
    jTextField7 = new javax.swing.JTextField();
    jPanel8 = new javax.swing.JPanel();

    setBackground(new java.awt.Color(153, 0, 102));
    setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Audio Effect Control", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(255, 255, 255))); // NOI18N
    setMinimumSize(new java.awt.Dimension(320, 280));
    setPreferredSize(new java.awt.Dimension(320, 280));
    setLayout(new java.awt.GridBagLayout());

    jPanel1.setMinimumSize(new java.awt.Dimension(66, 25));
    jPanel1.setOpaque(false);
    jPanel1.setPreferredSize(new java.awt.Dimension(175, 25));
    jPanel1.setLayout(new java.awt.GridBagLayout());

    jSlider1.setForeground(new java.awt.Color(0, 0, 0));
    jSlider1.setMaximum(200);
    jSlider1.setValue(100);
    jSlider1.setOpaque(false);
    jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        jSlider1StateChanged(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel1.add(jSlider1, gridBagConstraints);

    jTextField1.setBackground(new java.awt.Color(204, 255, 51));
    jTextField1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
    jTextField1.setText("1.0");
    jTextField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jTextField1.setMaximumSize(new java.awt.Dimension(50, 18));
    jTextField1.setMinimumSize(new java.awt.Dimension(50, 18));
    jTextField1.setPreferredSize(new java.awt.Dimension(50, 18));
    jTextField1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jTextField1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    jPanel1.add(jTextField1, gridBagConstraints);

    //jButton1.setBackground(new java.awt.Color(0, 0, 0));
    jButton1.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    //jButton1.setForeground(new java.awt.Color(255, 255, 255));
    jButton1.setText("AMPLIFY");
    jButton1.setMargin(new java.awt.Insets(2, 5, 2, 5));
    jButton1.setMaximumSize(new java.awt.Dimension(80, 18));
    jButton1.setMinimumSize(new java.awt.Dimension(80, 18));
    jButton1.setPreferredSize(new java.awt.Dimension(80, 18));
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel1.add(jButton1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(jPanel1, gridBagConstraints);

    jPanel2.setMinimumSize(new java.awt.Dimension(66, 25));
    jPanel2.setOpaque(false);
    jPanel2.setPreferredSize(new java.awt.Dimension(175, 25));
    jPanel2.setLayout(new java.awt.GridBagLayout());

    jButton2.setBackground(new java.awt.Color(0, 0, 0));
    jButton2.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jButton2.setForeground(new java.awt.Color(255, 255, 255));
    jButton2.setText("BOOST");
    jButton2.setMargin(new java.awt.Insets(2, 5, 2, 5));
    jButton2.setMaximumSize(new java.awt.Dimension(80, 18));
    jButton2.setMinimumSize(new java.awt.Dimension(80, 18));
    jButton2.setPreferredSize(new java.awt.Dimension(80, 18));
    jButton2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel2.add(jButton2, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel2.add(jLabel1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(jPanel2, gridBagConstraints);

    jPanel3.setMinimumSize(new java.awt.Dimension(66, 25));
    jPanel3.setOpaque(false);
    jPanel3.setPreferredSize(new java.awt.Dimension(175, 25));
    jPanel3.setLayout(new java.awt.GridBagLayout());

    jSlider2.setForeground(new java.awt.Color(0, 0, 0));
    jSlider2.setValue(0);
    jSlider2.setOpaque(false);
    jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        jSlider2StateChanged(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel3.add(jSlider2, gridBagConstraints);

    jTextField2.setBackground(new java.awt.Color(204, 255, 51));
    jTextField2.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
    jTextField2.setText("0.0");
    jTextField2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jTextField2.setMaximumSize(new java.awt.Dimension(50, 18));
    jTextField2.setMinimumSize(new java.awt.Dimension(50, 18));
    jTextField2.setPreferredSize(new java.awt.Dimension(50, 18));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    jPanel3.add(jTextField2, gridBagConstraints);

    jButton3.setBackground(new java.awt.Color(0, 0, 0));
    jButton3.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jButton3.setForeground(new java.awt.Color(255, 255, 255));
    jButton3.setText("FADE IN");
    jButton3.setMargin(new java.awt.Insets(2, 5, 2, 5));
    jButton3.setMaximumSize(new java.awt.Dimension(80, 18));
    jButton3.setMinimumSize(new java.awt.Dimension(80, 18));
    jButton3.setPreferredSize(new java.awt.Dimension(80, 18));
    jButton3.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel3.add(jButton3, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(jPanel3, gridBagConstraints);

    jPanel4.setMinimumSize(new java.awt.Dimension(66, 25));
    jPanel4.setOpaque(false);
    jPanel4.setPreferredSize(new java.awt.Dimension(175, 25));
    jPanel4.setLayout(new java.awt.GridBagLayout());

    jSlider3.setForeground(new java.awt.Color(0, 0, 0));
    jSlider3.setValue(0);
    jSlider3.setOpaque(false);
    jSlider3.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        jSlider3StateChanged(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel4.add(jSlider3, gridBagConstraints);

    jTextField3.setBackground(new java.awt.Color(204, 255, 51));
    jTextField3.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
    jTextField3.setText("0.0");
    jTextField3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jTextField3.setMaximumSize(new java.awt.Dimension(50, 18));
    jTextField3.setMinimumSize(new java.awt.Dimension(50, 18));
    jTextField3.setPreferredSize(new java.awt.Dimension(50, 18));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    jPanel4.add(jTextField3, gridBagConstraints);

    jButton4.setBackground(new java.awt.Color(0, 0, 0));
    jButton4.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jButton4.setForeground(new java.awt.Color(255, 255, 255));
    jButton4.setText("FADE OUT");
    jButton4.setMargin(new java.awt.Insets(2, 5, 2, 5));
    jButton4.setMaximumSize(new java.awt.Dimension(80, 18));
    jButton4.setMinimumSize(new java.awt.Dimension(80, 18));
    jButton4.setPreferredSize(new java.awt.Dimension(80, 18));
    jButton4.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel4.add(jButton4, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(jPanel4, gridBagConstraints);

    jPanel5.setMinimumSize(new java.awt.Dimension(66, 25));
    jPanel5.setOpaque(false);
    jPanel5.setPreferredSize(new java.awt.Dimension(175, 25));
    jPanel5.setLayout(new java.awt.GridBagLayout());

    jButton5.setBackground(new java.awt.Color(0, 0, 0));
    jButton5.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jButton5.setForeground(new java.awt.Color(255, 255, 255));
    jButton5.setText("HIGH-PASS");
    jButton5.setMargin(new java.awt.Insets(2, 5, 2, 5));
    jButton5.setMaximumSize(new java.awt.Dimension(80, 18));
    jButton5.setMinimumSize(new java.awt.Dimension(80, 18));
    jButton5.setPreferredSize(new java.awt.Dimension(80, 18));
    jButton5.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel5.add(jButton5, gridBagConstraints);

    jButton6.setBackground(new java.awt.Color(0, 0, 0));
    jButton6.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jButton6.setForeground(new java.awt.Color(255, 255, 255));
    jButton6.setText("LOW-PASS");
    jButton6.setMargin(new java.awt.Insets(2, 5, 2, 5));
    jButton6.setMaximumSize(new java.awt.Dimension(80, 18));
    jButton6.setMinimumSize(new java.awt.Dimension(80, 18));
    jButton6.setPreferredSize(new java.awt.Dimension(80, 18));
    jButton6.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel5.add(jButton6, gridBagConstraints);

    jButton7.setBackground(new java.awt.Color(0, 0, 0));
    jButton7.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jButton7.setForeground(new java.awt.Color(255, 255, 255));
    jButton7.setText("BAND-PASS");
    jButton7.setMargin(new java.awt.Insets(2, 5, 2, 5));
    jButton7.setMaximumSize(new java.awt.Dimension(80, 18));
    jButton7.setMinimumSize(new java.awt.Dimension(80, 18));
    jButton7.setPreferredSize(new java.awt.Dimension(80, 18));
    jButton7.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel5.add(jButton7, gridBagConstraints);

    jButton8.setBackground(new java.awt.Color(0, 0, 0));
    jButton8.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jButton8.setForeground(new java.awt.Color(255, 255, 255));
    jButton8.setText("BAND-REJECT");
    jButton8.setMargin(new java.awt.Insets(2, 5, 2, 5));
    jButton8.setMaximumSize(new java.awt.Dimension(80, 18));
    jButton8.setMinimumSize(new java.awt.Dimension(80, 18));
    jButton8.setPreferredSize(new java.awt.Dimension(80, 18));
    jButton8.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    jPanel5.add(jButton8, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(jPanel5, gridBagConstraints);

    jPanel6.setMinimumSize(new java.awt.Dimension(66, 25));
    jPanel6.setOpaque(false);
    jPanel6.setPreferredSize(new java.awt.Dimension(175, 25));
    jPanel6.setLayout(new java.awt.GridBagLayout());

    jButton9.setBackground(new java.awt.Color(0, 0, 0));
    jButton9.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jButton9.setForeground(new java.awt.Color(255, 255, 255));
    jButton9.setText("REVERSE");
    jButton9.setMargin(new java.awt.Insets(2, 5, 2, 5));
    jButton9.setMaximumSize(new java.awt.Dimension(80, 18));
    jButton9.setMinimumSize(new java.awt.Dimension(80, 18));
    jButton9.setPreferredSize(new java.awt.Dimension(80, 18));
    jButton9.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel6.add(jButton9, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel6.add(jLabel2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(jPanel6, gridBagConstraints);

    jPanel7.setMinimumSize(new java.awt.Dimension(175, 120));
    jPanel7.setOpaque(false);
    jPanel7.setPreferredSize(new java.awt.Dimension(175, 120));
    jPanel7.setLayout(new java.awt.GridBagLayout());

    jSlider4.setForeground(new java.awt.Color(0, 0, 0));
    jSlider4.setMaximum(1000);
    jSlider4.setValue(0);
    jSlider4.setOpaque(false);
    jSlider4.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        jSlider4StateChanged(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel7.add(jSlider4, gridBagConstraints);

    jTextField4.setBackground(new java.awt.Color(204, 255, 51));
    jTextField4.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
    jTextField4.setText("0.0");
    jTextField4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jTextField4.setMaximumSize(new java.awt.Dimension(50, 18));
    jTextField4.setMinimumSize(new java.awt.Dimension(50, 18));
    jTextField4.setPreferredSize(new java.awt.Dimension(50, 18));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    jPanel7.add(jTextField4, gridBagConstraints);

    jButton10.setBackground(new java.awt.Color(0, 0, 0));
    jButton10.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jButton10.setForeground(new java.awt.Color(255, 255, 255));
    jButton10.setText("REVERB");
    jButton10.setMargin(new java.awt.Insets(2, 5, 2, 5));
    jButton10.setMaximumSize(new java.awt.Dimension(80, 18));
    jButton10.setMinimumSize(new java.awt.Dimension(80, 18));
    jButton10.setPreferredSize(new java.awt.Dimension(80, 18));
    jButton10.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel7.add(jButton10, gridBagConstraints);

    jLabel3.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jLabel3.setForeground(new java.awt.Color(255, 255, 255));
    jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel3.setText("CH 0 DELAY");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel7.add(jLabel3, gridBagConstraints);

    jLabel4.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jLabel4.setForeground(new java.awt.Color(255, 255, 255));
    jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel4.setText("MULTIPLIER");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel7.add(jLabel4, gridBagConstraints);

    jSlider5.setForeground(new java.awt.Color(0, 0, 0));
    jSlider5.setValue(0);
    jSlider5.setOpaque(false);
    jSlider5.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        jSlider5StateChanged(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel7.add(jSlider5, gridBagConstraints);

    jTextField5.setBackground(new java.awt.Color(204, 255, 51));
    jTextField5.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
    jTextField5.setText("0.0");
    jTextField5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jTextField5.setMaximumSize(new java.awt.Dimension(50, 18));
    jTextField5.setMinimumSize(new java.awt.Dimension(50, 18));
    jTextField5.setPreferredSize(new java.awt.Dimension(50, 18));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    jPanel7.add(jTextField5, gridBagConstraints);

    jLabel5.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jLabel5.setForeground(new java.awt.Color(255, 255, 255));
    jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel5.setText("CH1 DELAY");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel7.add(jLabel5, gridBagConstraints);

    jSlider6.setForeground(new java.awt.Color(0, 0, 0));
    jSlider6.setMaximum(1000);
    jSlider6.setValue(0);
    jSlider6.setOpaque(false);
    jSlider6.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        jSlider6StateChanged(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel7.add(jSlider6, gridBagConstraints);

    jTextField6.setBackground(new java.awt.Color(204, 255, 51));
    jTextField6.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
    jTextField6.setText("0.0");
    jTextField6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jTextField6.setMaximumSize(new java.awt.Dimension(50, 18));
    jTextField6.setMinimumSize(new java.awt.Dimension(50, 18));
    jTextField6.setPreferredSize(new java.awt.Dimension(50, 18));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    jPanel7.add(jTextField6, gridBagConstraints);

    jLabel6.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
    jLabel6.setForeground(new java.awt.Color(255, 255, 255));
    jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel6.setText("MULTIPLIER");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel7.add(jLabel6, gridBagConstraints);

    jSlider7.setForeground(new java.awt.Color(0, 0, 0));
    jSlider7.setValue(0);
    jSlider7.setOpaque(false);
    jSlider7.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        jSlider7StateChanged(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    jPanel7.add(jSlider7, gridBagConstraints);

    jTextField7.setBackground(new java.awt.Color(204, 255, 51));
    jTextField7.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
    jTextField7.setText("0.0");
    jTextField7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jTextField7.setMaximumSize(new java.awt.Dimension(50, 18));
    jTextField7.setMinimumSize(new java.awt.Dimension(50, 18));
    jTextField7.setPreferredSize(new java.awt.Dimension(50, 18));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    jPanel7.add(jTextField7, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(jPanel7, gridBagConstraints);

    jPanel8.setOpaque(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    add(jPanel8, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
    int value = jSlider1.getValue();
    double amplification;
    if (value <= 100) {
      amplification = value / 100.0;
    } else {
      amplification = (value - 100.0) / 10.0 + 1;
    }
    jTextField1.setText(amplification + "");
    AmplifyEffect effect = (AmplifyEffect) theProcess.getEffect(AmplifyEffect.class);
    effect.setMultiplier(amplification);
  }//GEN-LAST:event_jSlider1StateChanged

  private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
    /*
    String ampStr = jTextField1.getText();
    double amplification;
    try {
      amplification = Double.parseDouble(ampStr);
    } catch (Exception ex) {
      jTextField1.setText("");
      return;
    }
    int value;
    if (amplification <= 1.0) {
      value = (int) (amplification * 100);
    } else {
      value = (int) (100 + (amplification - 1.0) * 10);
    }
    jSlider1.setValue(value);
    AmplifyEffect effect = (AmplifyEffect) theProcess.getEffect(AmplifyEffect.class);
    effect.setMultiplier(amplification);
     */
  }//GEN-LAST:event_jTextField1ActionPerformed

  private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
    int value = jSlider2.getValue();
    double duration = value / 100.0;
    jTextField2.setText(duration + "");
    FadeInEffect effect = (FadeInEffect) theProcess.getEffect(FadeInEffect.class);
    effect.setFadeInLength(duration);
  }//GEN-LAST:event_jSlider2StateChanged

  private void jSlider3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider3StateChanged
    int value = jSlider3.getValue();
    double duration = value / 100.0;
    jTextField3.setText(duration + "");
    FadeOutEffect effect = (FadeOutEffect) theProcess.getEffect(FadeOutEffect.class);
    effect.setFadeOutLength(duration);
  }//GEN-LAST:event_jSlider3StateChanged

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    JButton theButton = (JButton)evt.getSource();
    AbstractEffect theEffect = effectTable.get(evt.getSource());
    theEffect.setEnabled(!theEffect.isEnabled());
    updateButtonDisplay(theButton, theEffect);
  }//GEN-LAST:event_jButton1ActionPerformed

  private void jSlider4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider4StateChanged
    int value = jSlider4.getValue();
    double delay = value / 10.0;
    jTextField4.setText(delay + "ms");
    ReverbEffect effect = (ReverbEffect) theProcess.getEffect(ReverbEffect.class);
    effect.setReverbDelay(0, delay / 1000);
  }//GEN-LAST:event_jSlider4StateChanged

  private void jSlider5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider5StateChanged
    int value = jSlider5.getValue();
    double amplifier = value / 400.0;
    jTextField5.setText(amplifier + "");
    ReverbEffect effect = (ReverbEffect) theProcess.getEffect(ReverbEffect.class);
    effect.setReverbAmplifier(0, amplifier);
  }//GEN-LAST:event_jSlider5StateChanged

  private void jSlider6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider6StateChanged
    int value = jSlider6.getValue();
    double delay = value / 10.0;
    jTextField6.setText(delay + "ms");
    ReverbEffect effect = (ReverbEffect) theProcess.getEffect(ReverbEffect.class);
    effect.setReverbDelay(0, delay / 1000);
  }//GEN-LAST:event_jSlider6StateChanged

  private void jSlider7StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider7StateChanged
    int value = jSlider7.getValue();
    double amplifier = value / 400.0;
    jTextField7.setText(amplifier + "");
    ReverbEffect effect = (ReverbEffect) theProcess.getEffect(ReverbEffect.class);
    effect.setReverbAmplifier(0, amplifier);
  }//GEN-LAST:event_jSlider7StateChanged

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton10;
  private javax.swing.JButton jButton2;
  private javax.swing.JButton jButton3;
  private javax.swing.JButton jButton4;
  private javax.swing.JButton jButton5;
  private javax.swing.JButton jButton6;
  private javax.swing.JButton jButton7;
  private javax.swing.JButton jButton8;
  private javax.swing.JButton jButton9;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JPanel jPanel5;
  private javax.swing.JPanel jPanel6;
  private javax.swing.JPanel jPanel7;
  private javax.swing.JPanel jPanel8;
  private javax.swing.JSlider jSlider1;
  private javax.swing.JSlider jSlider2;
  private javax.swing.JSlider jSlider3;
  private javax.swing.JSlider jSlider4;
  private javax.swing.JSlider jSlider5;
  private javax.swing.JSlider jSlider6;
  private javax.swing.JSlider jSlider7;
  private javax.swing.JTextField jTextField1;
  private javax.swing.JTextField jTextField2;
  private javax.swing.JTextField jTextField3;
  private javax.swing.JTextField jTextField4;
  private javax.swing.JTextField jTextField5;
  private javax.swing.JTextField jTextField6;
  private javax.swing.JTextField jTextField7;
  // End of variables declaration//GEN-END:variables
}
