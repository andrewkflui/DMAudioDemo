/***************************************************************
 *
 * Interactive Learning Platform: Digital Audio
 * Copyright (c) 2010 Dr. Andrew Kwok-Fai LUI
 * The Open University of Hong Kong
 *
 * Enhance the learning effectiveness of students through greater interactions
 */
/*  This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
package faifai.audio;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

public class AudioFileSelectorPanel extends javax.swing.JPanel {

  private AudioClip audioClip;

  /** Creates new form MediaLoaderBean */
  public AudioFileSelectorPanel() {
    initComponents();
    audioClip = new AudioClip();
  }

  /**
   * Bean Inteface Method
   * This method is called to obtain the selected audio clip
   */
  public AudioClip getAudioClip() {
    return this.audioClip;
  }

  /**
   * Bean Inteface Method
   * This method is called to obtain the selected file
   */
  public File getSelectedFile() {
    return selectedFile;
  }

  private void updateDisplay() {
    AudioDataBuffer dataBuffer = audioClip.getAudioDataBuffer();
    if (dataBuffer == null) {
      if (selectedFile != null) {
        jTextArea1.setText("[SELECTED FILE NOT AUDIO] " + selectedFile.getAbsolutePath());
      } else {
        jTextArea1.setText("[NO FILE SELECTED]");
      }
    } else {
      jTextArea1.setText("[FILE LOADED] ");
    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    jButton1 = new javax.swing.JButton();
    jComboBox1 = new javax.swing.JComboBox();
    jTextArea1 = new javax.swing.JTextArea();

    setBackground(new java.awt.Color(153, 0, 102));
    setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Audio File Selector", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(255, 255, 255))); // NOI18N
    setMaximumSize(new java.awt.Dimension(240, 85));
    setMinimumSize(new java.awt.Dimension(240, 85));
    setPreferredSize(new java.awt.Dimension(240, 85));
    setLayout(new java.awt.GridBagLayout());

    jButton1.setBackground(new java.awt.Color(255, 255, 0));
    jButton1.setFont(new java.awt.Font("Tahoma", 2, 8)); // NOI18N
    jButton1.setText("File");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        selectButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    add(jButton1, gridBagConstraints);

    jComboBox1.setBackground(new java.awt.Color(255, 204, 0));
    jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Recent File List" }));
    jComboBox1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jComboBox1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
    add(jComboBox1, gridBagConstraints);

    jTextArea1.setBackground(new java.awt.Color(204, 255, 51));
    jTextArea1.setColumns(20);
    jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
    jTextArea1.setLineWrap(true);
    jTextArea1.setRows(3);
    jTextArea1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jTextArea1.setMaximumSize(new java.awt.Dimension(120, 32));
    jTextArea1.setMinimumSize(new java.awt.Dimension(120, 32));
    jTextArea1.setPreferredSize(new java.awt.Dimension(120, 32));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
    add(jTextArea1, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
      Object selectedItem = jComboBox1.getSelectedItem();
      if (selectedItem instanceof File) {
        selectedFile = (File) selectedItem;
        jTextArea1.setText(selectedFile.getPath());
        jComboBox1.setSelectedIndex(0);
      }
      return;
    }//GEN-LAST:event_jComboBox1ActionPerformed
  protected JFileChooser fileChooser = null;
  protected File selectedFile = null;

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
      if (fileChooser == null) {
        fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setDialogTitle("Select an Audio File");
        fileChooser.setFileFilter(new AudioFileFilter());
        if (selectedFile == null) {
          fileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
        } else {
          fileChooser.setCurrentDirectory(selectedFile);
        }
      }
      int result = fileChooser.showOpenDialog(null);
      if (result == JFileChooser.CANCEL_OPTION) {
        return;
      }
      selectedFile = fileChooser.getSelectedFile();
      AudioDataBuffer dataBuffer = audioClip.getAudioDataBuffer();
      try {
        dataBuffer.loadAudioFile(selectedFile);
        dataBuffer.to8BitMono();
      } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error in opening audio file", "IO Error",
                JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
      }
      int len = jComboBox1.getItemCount();
      for (int i = 0; i < len; i++) {
        if (jComboBox1.getItemAt(i) == selectedFile) {
          return;
        }
      }
      jComboBox1.addItem(selectedFile);
      updateDisplay();
    }//GEN-LAST:event_selectButtonActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JComboBox jComboBox1;
  private javax.swing.JTextArea jTextArea1;
  // End of variables declaration//GEN-END:variables

  class AudioFileFilter extends FileFilter {
    private String suffixArray[] = {".wav", ".mid", "aiff", "mp3"};

    public boolean accept(File file) {
      if (file == null) {
        return false;
      }
      String name = file.getName().toLowerCase();
      if (file.isDirectory()) {
        return true;
      }
      for (int i = 0; i < suffixArray.length; i++) {
        if (name.endsWith(suffixArray[i])) {
          return true;
        }
      }
      return false;
    }

    public String getDescription() {
      return "Audio File (wav, mid, aiff)";
    }
  }
}

