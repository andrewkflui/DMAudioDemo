/***************************************************************
 *
 * Interactive Learning Platform: Digital Audio
 * Copyright (c) 2010 Dr. Andrew Kwok-Fai LUI
 * The Open University of Hong Kong
 *
 * Enhance the learning effectiveness of students through greater interactions
 */
/*  This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
package faifai.audio;

import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.TargetDataLine;

import faifai.audio.*;

public class MasterMonitorPanel extends javax.swing.JPanel implements Runnable {

  private AudioDataBuffer audioDataBuffer = null;
  private TargetDataLine targetDataLine = null;
  private Thread thisThread;
  private boolean toStop = false;
  private boolean toSample = false;
  private boolean toRepeat = true;

  /** Creates new form WaveGeneratorPanel */
  public MasterMonitorPanel() {
    initComponents();
    /*
    this.waveDrawingLabel1.setTimeScale(0.0725);
    this.spectrumDrawingLabel1.setDisplayMode(SpectrumDrawingLabel.SCALE);
    //AudioFormat audioFormat = new AudioFormat(AudioFormat.Encoding.PCM_SIGNED,
    //        44100.0F, 8, 1, 1, 44100.0F, false);
    this.audioDataBuffer = new AudioDataBuffer(audioFormat, (int) (audioFormat.getFrameRate()));

    DataLine.Info info = new DataLine.Info(TargetDataLine.class, audioFormat);
    try {
      targetDataLine = (TargetDataLine) AudioSystem.getLine(info);
      targetDataLine.open(audioFormat);
      targetDataLine.start();
    } catch (LineUnavailableException ex) {
      ex.printStackTrace();
    }
    thisThread = new Thread(this);
    thisThread.start();
    */
  }

  public void hideControlPanel() {
    jPanel1.setVisible(false);
  }

  public void hideSpectrumVisualizer() {
    spectrumDrawingLabel1.setVisible(false);
    jLabel3.setVisible(false);
  }

  public void close() {
    toStop = true;
  }

  public void startSampling(boolean toRepeat) {
    this.toSample = true;
    this.toRepeat = toRepeat;
  }

  public void stopSampling() {
    toSample = false;
  }

  private double getLevel() {
    byte dataBuffer[] = audioDataBuffer.getDataBuffer();
    int dataLength = audioDataBuffer.getDataLength();
    if (dataLength == 0) {
      return 0;
    }
    double sum = 0;
    for (int i = 0; i < dataLength; i++) {
      sum = sum + dataBuffer[i] * dataBuffer[i];
    }
    return Math.sqrt(sum / dataLength) / 128.0;
  }

  public void run() {
    while (true) {
      if (toStop) {
        break;
      }
      try {
        if (toSample) {
          byte dataBuffer[] = audioDataBuffer.getDataBuffer();
          int count = targetDataLine.read(dataBuffer, 0, targetDataLine.available());
          audioDataBuffer.setDataLength(count);
          waveDrawingLabel1.setDataBuffer(audioDataBuffer.getDataBuffer(), audioDataBuffer.getDataLength(),
                  audioDataBuffer.getAudioFormat());
          if (spectrumDrawingLabel1.isVisible()) {
            spectrumDrawingLabel1.setDataBuffer(audioDataBuffer.getDataBuffer(), audioDataBuffer.getDataLength(),
                    audioDataBuffer.getAudioFormat());
          }
          levelLabel1.setData(getLevel());
          levelLabel1.refresh();
          if (!toRepeat) {
            toSample = false;
          }
        }
        thisThread.sleep(100);
      } catch (InterruptedException ex) {
      } catch (Exception ex) {
        ex.printStackTrace();
        break;
      }
    }
  }

  public void setRepeatDraw(boolean repeat) {
    this.waveDrawingLabel1.setRepeatDrawWave(repeat);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    jPanel1 = new javax.swing.JPanel();
    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();
    jButton3 = new javax.swing.JButton();
    jButton4 = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    waveDrawingLabel1 = new faifai.audio.WaveDrawingLabel();
    levelLabel1 = new faifai.audio.LevelLabel();
    spectrumDrawingLabel1 = new faifai.audio.SpectrumDrawingLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();

    setBackground(new java.awt.Color(153, 0, 102));
    setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Master Monitor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(255, 255, 255))); // NOI18N
    setMinimumSize(new java.awt.Dimension(240, 240));
    setPreferredSize(new java.awt.Dimension(240, 240));
    setLayout(new java.awt.GridBagLayout());

    jPanel1.setMinimumSize(new java.awt.Dimension(66, 25));
    jPanel1.setOpaque(false);
    jPanel1.setPreferredSize(new java.awt.Dimension(175, 25));
    jPanel1.setLayout(new java.awt.GridBagLayout());

    jButton1.setBackground(new java.awt.Color(0, 0, 0));
    jButton1.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
    jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PlusCircle.png"))); // NOI18N
    jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
    jButton1.setMaximumSize(new java.awt.Dimension(19, 19));
    jButton1.setMinimumSize(new java.awt.Dimension(19, 19));
    jButton1.setPreferredSize(new java.awt.Dimension(19, 19));
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
    jPanel1.add(jButton1, gridBagConstraints);

    jButton2.setBackground(new java.awt.Color(0, 0, 0));
    jButton2.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MinusCircle.png"))); // NOI18N
    jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
    jButton2.setMaximumSize(new java.awt.Dimension(19, 19));
    jButton2.setMinimumSize(new java.awt.Dimension(19, 19));
    jButton2.setPreferredSize(new java.awt.Dimension(19, 19));
    jButton2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
    jPanel1.add(jButton2, gridBagConstraints);

    jButton3.setBackground(new java.awt.Color(0, 0, 0));
    jButton3.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
    jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/LeftYellowTriangle.png"))); // NOI18N
    jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jButton3.setMargin(new java.awt.Insets(0, 0, 0, 0));
    jButton3.setMaximumSize(new java.awt.Dimension(19, 19));
    jButton3.setMinimumSize(new java.awt.Dimension(19, 19));
    jButton3.setPreferredSize(new java.awt.Dimension(19, 19));
    jButton3.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton3ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
    jPanel1.add(jButton3, gridBagConstraints);

    jButton4.setBackground(new java.awt.Color(0, 0, 0));
    jButton4.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
    jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/RightYellowTriangle.png"))); // NOI18N
    jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jButton4.setMargin(new java.awt.Insets(0, 0, 0, 0));
    jButton4.setMaximumSize(new java.awt.Dimension(19, 19));
    jButton4.setMinimumSize(new java.awt.Dimension(19, 19));
    jButton4.setPreferredSize(new java.awt.Dimension(19, 19));
    jButton4.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton4ActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
    jPanel1.add(jButton4, gridBagConstraints);

    jLabel1.setBackground(new java.awt.Color(204, 255, 0));
    jLabel1.setFont(new java.awt.Font("Monospaced", 0, 10));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(jLabel1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
    add(jPanel1, gridBagConstraints);

    waveDrawingLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    waveDrawingLabel1.setText("waveDrawingLabel1");
    waveDrawingLabel1.setMaximumSize(new java.awt.Dimension(96, 60));
    waveDrawingLabel1.setMinimumSize(new java.awt.Dimension(96, 60));
    waveDrawingLabel1.setPreferredSize(new java.awt.Dimension(96, 60));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(waveDrawingLabel1, gridBagConstraints);

    levelLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    levelLabel1.setText("levelLabel1");
    levelLabel1.setMaximumSize(new java.awt.Dimension(57, 25));
    levelLabel1.setMinimumSize(new java.awt.Dimension(57, 25));
    levelLabel1.setPreferredSize(new java.awt.Dimension(57, 25));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
    add(levelLabel1, gridBagConstraints);

    spectrumDrawingLabel1.setText("spectrumDrawingLabel1");
    spectrumDrawingLabel1.setMaximumSize(new java.awt.Dimension(96, 60));
    spectrumDrawingLabel1.setMinimumSize(new java.awt.Dimension(96, 60));
    spectrumDrawingLabel1.setPreferredSize(new java.awt.Dimension(96, 60));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
    add(spectrumDrawingLabel1, gridBagConstraints);

    jLabel2.setForeground(new java.awt.Color(255, 255, 255));
    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel2.setText("Waveform");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    add(jLabel2, gridBagConstraints);

    jLabel3.setForeground(new java.awt.Color(255, 255, 255));
    jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel3.setText("Spectral Analysis");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    add(jLabel3, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    waveDrawingLabel1.downTimeScale();
  }//GEN-LAST:event_jButton1ActionPerformed

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    waveDrawingLabel1.upTimeScale();
  }//GEN-LAST:event_jButton2ActionPerformed

  private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    waveDrawingLabel1.decreaseStartTime();
  }//GEN-LAST:event_jButton3ActionPerformed

  private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    waveDrawingLabel1.increaseStartTime();
  }//GEN-LAST:event_jButton4ActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JButton jButton3;
  private javax.swing.JButton jButton4;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JPanel jPanel1;
  private faifai.audio.LevelLabel levelLabel1;
  private faifai.audio.SpectrumDrawingLabel spectrumDrawingLabel1;
  private faifai.audio.WaveDrawingLabel waveDrawingLabel1;
  // End of variables declaration//GEN-END:variables
}
